import fs from 'fs/promises';
import {uniq} from 'lodash';
import path from 'path';
import prettier from 'prettier';
import {IconDescription, SIZE_REGEXP} from './fetch-icons';
import {BASE_DIR} from './local';

const TYPES_PATH = path.join(BASE_DIR, 'src/icons/types');

export const generateIconsTypes = async (icons: IconDescription[]) => {
    const type = 'IconName';
    const iconNames = uniq(icons.map(({name}) => name.replace(SIZE_REGEXP, '')));
    const content = `
/** Don't edit manually. Generated by script: ./tools/icons/generate-types.ts */
type ${type} =${iconNames.map((name) => `| '${name}'`).join('\n')};

export {${type}};
`;

    const prettierConfig = await prettier.resolveConfig(process.cwd());
    const formattedContent = await prettier.format(content, {...prettierConfig, parser: 'typescript'});

    await fs.writeFile(path.join(TYPES_PATH, 'rubrics.ts'), formattedContent);
};
